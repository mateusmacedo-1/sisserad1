name: gh-pages-deploy-feature

on:
  push:
    branches:
      - feature
  pull_request:
      branches:
      - feature

permissions: 
  contents: write
  pages: write
  id-token: write

concurrency: 
  group: "pages"
  cancel-in-progress: false

jobs:
  compile-front:
    environment: 
      name: render
      url: ${{ steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code1
        uses: actions/checkout@v4


      - name: Setup .NET8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install .NET Wasm Tools
        run: dotnet workload install wasm-tools

      - name: Restore Dependencies
        run: dotnet restore

      - name: build
        run: dotnet build --no-restore
      
      - name: publish dotnet
        run: dotnet publish ClientBlazor/ClientBlazor.csproj -c Release -o docs --nologo
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
      # - name: Move docs to another branch
      #   run: |
      #     git config user.email "actions@github.com"
      #     git config user.name "GitHub Actions"
      #     git checkout -b feature-deploy 
      #     git add docs
      #     git commit -m "Move docs to feature-deploy branch"
      #     git checkout .
      #     git pull origin feature-deploy --allow-unrelated-histories
      #     git push origin feature-deploy

  publish-back-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and publish API image
        run: |
          docker build -t seradapi .
          docker tag seradapi mateus314/seradapi:latest
          docker push mateus314/seradapi:latest
  deploy-webhook:
    needs: publish-back-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Invoke deployment hook
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$deploy_url"

  
