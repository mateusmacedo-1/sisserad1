name: gh-pages-deploy-feature

on:
  push:
    branches:
      - feature
  pull_request:
      branches:
      - feature

permissions: 
  contents: read
  pages: write
  id-token: write

concurrency: 
  group: "pages"
  cancel-in-progress: false

jobs:
  compile-front:
    environment: 
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Setup .NET8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install .NET Wasm Tools
        run: dotnet workload install wasm-tools

      - name: Restore Dependencies
        run: dotnet restore

      - name: build
        run: dotnet build --no-restore
      
      - name: publish dotnet
        run: dotnet publish ClientBlazor/ClientBlazor.csproj -c Release -o docs --nologo


      #dps de compilar manda a pasta docs pra branch de deploy
      - name: Push docs to separate branch
        uses: ad-m/github-push-action@master
        with:
          branch: feature-deploy  # nome da branch onde vocÃª quer enviar a pasta docs
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
  create-pull-request:
    # faz pull request no repositorio que o render observa pra fzr deployh do front
    needs: compile-front
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: feature-deploy  
          base: feature  
          title: Update docs folder
          body: This pull request updates the docs folder with the latest changes.
  publish-back-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and publish API image
        run: |
          docker build -t seradapi .
          docker tag seradapi mateus314/seradapi:latest
          docker push mateus314/seradapi:latest
  deploy-webhook:
    needs: publish-back-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Invoke deployment hook
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$deploy_url"

  
